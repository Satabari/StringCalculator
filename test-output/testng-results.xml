<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="8" passed="7" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2021-06-09T16:01:17 IST" name="Default suite" finished-at="2021-06-09T16:01:17 IST" duration-ms="63">
    <groups>
    </groups>
    <test started-at="2021-06-09T16:01:17 IST" name="Default test" finished-at="2021-06-09T16:01:17 IST" duration-ms="63">
      <class name="Calculate">
        <test-method is-config="true" signature="init()[pri:0, instance:Calculate@47d90b9e]" started-at="2021-06-09T16:01:17 IST" name="init" finished-at="2021-06-09T16:01:17 IST" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- init -->
        <test-method signature="emptyString()[pri:0, instance:Calculate@47d90b9e]" started-at="2021-06-09T16:01:17 IST" name="emptyString" finished-at="2021-06-09T16:01:17 IST" duration-ms="8" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- emptyString -->
        <test-method signature="ignoreBiggerNumbers()[pri:0, instance:Calculate@47d90b9e]" started-at="2021-06-09T16:01:17 IST" name="ignoreBiggerNumbers" finished-at="2021-06-09T16:01:17 IST" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ignoreBiggerNumbers -->
        <test-method signature="multipleDelimiter()[pri:0, instance:Calculate@47d90b9e]" started-at="2021-06-09T16:01:17 IST" name="multipleDelimiter" finished-at="2021-06-09T16:01:17 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[For input string: ""]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: For input string: ""
at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
at java.base/java.lang.Integer.parseInt(Integer.java:670)
at java.base/java.lang.Integer.parseInt(Integer.java:778)
at Calculator.stringToInteger(Calculator.java:54)
at Calculator.negNumInput(Calculator.java:43)
at Calculator.sumInt(Calculator.java:26)
at Calculator.calString(Calculator.java:20)
at Calculate.multipleDelimiter(Calculate.java:47)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- multipleDelimiter -->
        <test-method signature="negativeInput()[pri:0, instance:Calculate@47d90b9e]" started-at="2021-06-09T16:01:17 IST" name="negativeInput" finished-at="2021-06-09T16:01:17 IST" duration-ms="1" status="PASS">
          <exception class="java.lang.NumberFormatException">
            <message>
              <![CDATA[For input string: ""]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.NumberFormatException: For input string: ""
at java.base/java.lang.NumberFormatException.forInputString(NumberFormatException.java:67)
at java.base/java.lang.Integer.parseInt(Integer.java:670)
at java.base/java.lang.Integer.parseInt(Integer.java:778)
at Calculator.stringToInteger(Calculator.java:54)
at Calculator.negNumInput(Calculator.java:43)
at Calculator.sumInt(Calculator.java:26)
at Calculator.calString(Calculator.java:20)
at Calculate.negativeInput(Calculate.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:78)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:567)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NumberFormatException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- negativeInput -->
        <test-method signature="singleNumber()[pri:0, instance:Calculate@47d90b9e]" started-at="2021-06-09T16:01:17 IST" name="singleNumber" finished-at="2021-06-09T16:01:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- singleNumber -->
        <test-method signature="threeNumbers()[pri:0, instance:Calculate@47d90b9e]" started-at="2021-06-09T16:01:17 IST" name="threeNumbers" finished-at="2021-06-09T16:01:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- threeNumbers -->
        <test-method signature="twoNumbers()[pri:0, instance:Calculate@47d90b9e]" started-at="2021-06-09T16:01:17 IST" name="twoNumbers" finished-at="2021-06-09T16:01:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoNumbers -->
        <test-method signature="twoNumbersDelimitedByNewLine()[pri:0, instance:Calculate@47d90b9e]" started-at="2021-06-09T16:01:17 IST" name="twoNumbersDelimitedByNewLine" finished-at="2021-06-09T16:01:17 IST" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- twoNumbersDelimitedByNewLine -->
      </class> <!-- Calculate -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
